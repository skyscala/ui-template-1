PGRpdiBpZD0ibGF5b3V0LW1lZ2FtZW51IiBjbGFzcz0icC1jb2wtMTIgbGF5b3V0LW1lZ2FtZW51IGZhZGVJbkRvd24iIFtuZ0NsYXNzXT0ieydsYXlvdXQtbWVnYW1lbnUtYWN0aXZlJzogYXBwTWFpbi5tZWdhTWVudUFjdGl2ZSwnbGF5b3V0LW1lZ2FtZW51LWRhcmsnOiBhcHAubWVnYU1lbnVNb2RlICE9PSAnbGlnaHQnLAogICAgICAgICAnbGF5b3V0LW1lZ2FtZW51LWdyYWRpZW50JzogIGFwcC5tZWdhTWVudU1vZGUgPT09ICdncmFkaWVudCd9IiAoY2xpY2spPSJhcHBNYWluLm9uTWVnYU1lbnVDbGljaygpIj4KICAgIDxkaXYgY2xhc3M9InAtZ3JpZCI-CiAgICAgICAgPGRpdiBjbGFzcz0icC1jb2wtMTIgcC1tZC02IHAtbGctMyBsYXlvdXQtbWVnYW1lbnUtc3VibWVudSI-CiAgICAgICAgICAgIDxoNj5TeXN0ZW0gUmVwb3J0czwvaDY-CiAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9InBpIHBpLWZ3IHBpLWxpc3QiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4-U3lzdGVtIExvZ3M8L3NwYW4-CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9InBpIHBpLWZ3IHBpLXNhdmUiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4-QmFjay11cCBTZXJ2ZXI8L3NwYW4-CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9InBpIHBpLWZ3IHBpLXVzZXJzIj48L2k-CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkNvbnZlcnNpb25zPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0icGkgcGktZncgcGktdGgtbGFyZ2UiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4-U3RvcmFnZSBMb2dzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8L3VsPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9InAtY29sLTEyIHAtbWQtNiBwLWxnLTMgbGF5b3V0LW1lZ2FtZW51LXN1Ym1lbnUiPgogICAgICAgICAgICA8aDY-RmluYW5jZSBSZXBvcnRzPC9oNj4KICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0icGkgcGktZncgcGktZmlsZSI-PC9pPgogICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Bbm51YWwgUmVwb3J0czwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2E-CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0icGkgcGktZncgcGktZG9sbGFyIj48L2k-CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlJldmVudWUgUmVwb3J0czwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2E-CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0icGkgcGktZncgcGktdXNlciI-PC9pPgogICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5IUiBSZXBvcnRzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk-CiAgICAgICAgICAgICAgICA8bGk-CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyI-CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJwaSBwaS1mdyBwaS1jaGFydC1iYXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4-RmluYW5jZSBNYXJnaW48L3NwYW4-CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJwLWNvbC0xMiBwLW1kLTYgcC1sZy0zIGxheW91dC1tZWdhbWVudS1zdWJtZW51Ij4KICAgICAgICAgICAgPGg2PlNldHRpbmdzPC9oNj4KICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0icGkgcGktZncgcGktZW52ZWxvcGUiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4-RS1tYWlsIE5vdGlmaWNhdGlvbnM8L3NwYW4-CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9InBpIHBpLWZ3IHBpLW1vYmlsZSI-PC9pPgogICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5TbXMgQWxlcnRzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk-CiAgICAgICAgICAgICAgICA8bGk-CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyI-CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJwaSBwaS1mdyBwaS1nbG9iZSI-PC9pPgogICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5TaXRlIFRyYWNraW5nPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk-CiAgICAgICAgICAgIDwvdWw-CiAgICAgICAgPC9kaXY-CiAgICAgICAgPGRpdiBjbGFzcz0icC1jb2wtMTIgcC1tZC02IHAtbGctMyBsYXlvdXQtbWVnYW1lbnUtc3VibWVudSI-CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRlbnQtaW1nIj4KICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJhc3NldHMvbGF5b3V0L2ltYWdlcy9pbWFnZS1tZWdhLnBuZyIgYWx0PSJjYWxpZm9ybmlhLWxheW91dCIgLz4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWctbWVnYW1lbnUiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwLWNvbC0xMiBpbWctaGVhZGVyIj5DYWxpZm9ybmlhPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwLWNvbC0xMiBpbWctc3ViaGVhZGVyIj5BcHBsaWNhdGlvbiBUZW1wbGF0ZTwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxwLWJ1dHRvbiBsYWJlbD0iQnV5IE5vdyIgdHlwZT0iYnV0dG9uIiBjbGFzcz0iYWx0LWJ0biI-PC9wLWJ1dHRvbj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9kaXY-Cg