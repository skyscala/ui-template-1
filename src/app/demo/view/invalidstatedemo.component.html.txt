PGRpdiBjbGFzcz0icC1ncmlkIHAtbm9ndXR0ZXIiPgogICAgPGRpdiBjbGFzcz0iY2FyZCIgc3R5bGU9IndpZHRoOiAxMDAlIj4KICAgICAgICA8aDU-SW52YWxpZCBTdGF0ZTwvaDU-CiAgICAgICAgPHA-QWxsIGZvcm0gY29tcG9uZW50cyBoYXZlIGFuIGludmFsaWQgc3RhdGUgc3R5bGUgdG8gZGlzcGxheSB0aGUgdmFsaWRhdGlvbiBlcnJvcnMgd2hlbiBuZy1pbnZhbGlkIG5nLWRpcnR5IGNvbWJpbmF0aW9uIGlzIGFwcGxpZWQgYnkgQW5ndWxhci48L3A-CiAgICAgICAgPGRpdiBjbGFzcz0icC1mbHVpZCBwLWdyaWQiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwLWNvbC0xMiBwLW1kLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icC1maWVsZCI-CiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iaW5wdXR0ZXh0Ij5JbnB1dFRleHQ8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0iaW5wdXR0ZXh0IiBwSW5wdXRUZXh0IGNsYXNzPSJuZy1pbnZhbGlkIG5nLWRpcnR5Ij4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icC1maWVsZCI-CiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iYXV0b2NvbXBsZXRlIj5BdXRvQ29tcGxldGU8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDxwLWF1dG9Db21wbGV0ZSBpbnB1dElkPSJhdXRvY29tcGxldGUiIFsobmdNb2RlbCldPSJ2YWx1ZTIiIFtzdWdnZXN0aW9uc109ImZpbHRlcmVkQ291bnRyaWVzIiAoY29tcGxldGVNZXRob2QpPSJzZWFyY2hDb3VudHJ5KCRldmVudCkiIGZpZWxkPSJuYW1lIiBjbGFzcz0ibmctaW52YWxpZCBuZy1kaXJ0eSI-PC9wLWF1dG9Db21wbGV0ZT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icC1maWVsZCI-CiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iY2FsZW5kYXIiPkNhbGVuZGFyPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8cC1jYWxlbmRhciBpbnB1dElkPSJjYWxlbmRhciIgWyhuZ01vZGVsKV09InZhbHVlMyIgY2xhc3M9Im5nLWludmFsaWQgbmctZGlydHkiIFtzaG93SWNvbl09InRydWUiPjwvcC1jYWxlbmRhcj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icC1maWVsZCI-CiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iY2hpcHMiPkNoaXBzPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8cC1jaGlwcyBpbnB1dElkPSJjaGlwcyIgWyhuZ01vZGVsKV09InZhbHVlNCIgY2xhc3M9Im5nLWludmFsaWQgbmctZGlydHkiPjwvcC1jaGlwcz4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icC1maWVsZCI-CiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0idGV4dGFyZWEiPlRleHRhcmVhPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgaW5wdXRJZD0idGV4dGFyZWEiIHJvd3M9IjMiIGNvbHM9IjMwIiBbKG5nTW9kZWwpXT0idmFsdWU5IiBwSW5wdXRUZXh0YXJlYSBjbGFzcz0ibmctaW52YWxpZCBuZy1kaXJ0eSI-PC90ZXh0YXJlYT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InAtY29sLTEyIHAtbWQtNiI-CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwLWZpZWxkIj4KICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJpbnB1dG1hc2siPklucHV0TWFzazwvbGFiZWw-CiAgICAgICAgICAgICAgICAgICAgPHAtaW5wdXRNYXNrIGlucHV0SWQ9ImlucHV0bWFzayIgbWFzaz0iOTkvOTkvOTk5OSIgWyhuZ01vZGVsKV09InZhbHVlNSIgY2xhc3M9Im5nLWludmFsaWQgbmctZGlydHkiPjwvcC1pbnB1dE1hc2s-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InAtZmllbGQiPgogICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImlucHV0bnVtYmVyIj5JbnB1dE51bWJlcjwvbGFiZWw-CiAgICAgICAgICAgICAgICAgICAgPHAtaW5wdXROdW1iZXIgaW5wdXRJZD0iaW5wdXRudW1iZXIiIFsobmdNb2RlbCldPSJ2YWx1ZTYiIGNsYXNzPSJuZy1pbnZhbGlkIG5nLWRpcnR5Ij48L3AtaW5wdXROdW1iZXI-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InAtZmllbGQiPgogICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImRyb3Bkb3duIj5Ecm9wZG93bjwvbGFiZWw-CiAgICAgICAgICAgICAgICAgICAgPHAtZHJvcGRvd24gaW5wdXRJZD0iZHJvcGRvd24iIFthdXRvRGlzcGxheUZpcnN0XT0iZmFsc2UiIFtvcHRpb25zXT0iY2l0aWVzIiBbKG5nTW9kZWwpXT0idmFsdWU3IiBvcHRpb25MYWJlbD0ibmFtZSIgY2xhc3M9Im5nLWludmFsaWQgbmctZGlydHkiPjwvcC1kcm9wZG93bj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icC1maWVsZCI-CiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ibXVsdGlzZWxlY3QiPk11bHRpU2VsZWN0PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8cC1tdWx0aVNlbGVjdCBpbnB1dElkPSJtdWx0aXNlbGVjdCIgW29wdGlvbnNdPSJjaXRpZXMiIFsobmdNb2RlbCldPSJ2YWx1ZTciIG9wdGlvbkxhYmVsPSJuYW1lIiBbZmlsdGVyXT0iZmFsc2UiIGNsYXNzPSJuZy1pbnZhbGlkIG5nLWRpcnR5Ij48L3AtbXVsdGlTZWxlY3Q-CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9kaXY-Cg