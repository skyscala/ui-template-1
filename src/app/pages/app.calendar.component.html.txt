PGRpdiBjbGFzcz0icC1ncmlkIj4KICAgIDxkaXYgY2xhc3M9InAtY29sLTEyIj4KICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIj4KICAgICAgICAgICAgPGg1PkNhbGVuZGFyPC9oNT4KICAgICAgICAgICAgPGZ1bGwtY2FsZW5kYXIgW29wdGlvbnNdPSJvcHRpb25zIj48L2Z1bGwtY2FsZW5kYXI-CgogICAgICAgICAgICA8cC1kaWFsb2cgWyh2aXNpYmxlKV09ImV2ZW50RGlhbG9nIiBbc3R5bGVdPSJ7d2lkdGg6ICc0NTBweCd9IiBoZWFkZXI9IkV2ZW50IERldGFpbHMiIFttb2RhbF09InRydWUiIFtjbG9zYWJsZV09InRydWUiPgogICAgICAgICAgICAgICAgPG5nLXRlbXBsYXRlIHBUZW1wbGF0ZT0iY29udGVudCI-CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icC1mbHVpZCI-CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InAtZmllbGQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0idGl0bGUiPlRpdGxlPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0idGl0bGUiIHR5cGU9InRleHQiIHBJbnB1dFRleHQgKm5nSWY9ImNsaWNrZWRFdmVudCIgWyhuZ01vZGVsKV09ImNoYW5nZWRFdmVudC50aXRsZSIgW3JlcXVpcmVkXT0idHJ1ZSI-CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwLWZpZWxkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InN0YXJ0Ij5Gcm9tPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwLWNhbGVuZGFyIGlkPSJzdGFydCIgKm5nSWY9ImNsaWNrZWRFdmVudCIgWyhuZ01vZGVsKV09ImNoYW5nZWRFdmVudC5zdGFydCIgW3Nob3dUaW1lXT0idHJ1ZSIgYXBwZW5kVG89ImJvZHkiPjwvcC1jYWxlbmRhcj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InAtZmllbGQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZW5kIj5UbzwvbGFiZWw-CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cC1jYWxlbmRhciBpZD0iZW5kIiAqbmdJZj0iY2xpY2tlZEV2ZW50IiBbKG5nTW9kZWwpXT0iY2hhbmdlZEV2ZW50LmVuZCIgW3Nob3dUaW1lXT0idHJ1ZSIgYXBwZW5kVG89ImJvZHkiPjwvcC1jYWxlbmRhcj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY-CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InAtZmllbGQtY2hlY2tib3giPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAtY2hlY2tib3ggaWQ9ImFsbGRheSIgKm5nSWY9ImNsaWNrZWRFdmVudCIgWyhuZ01vZGVsKV09ImNoYW5nZWRFdmVudC5hbGxkYXkiPjwvcC1jaGVja2JveD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImFsbGRheSI-QWxsIERheTwvbGFiZWw-CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT4KCiAgICAgICAgICAgICAgICA8bmctdGVtcGxhdGUgcFRlbXBsYXRlPSJmb290ZXIiPgogICAgICAgICAgICAgICAgICAgIDxidXR0b24gcEJ1dHRvbiBsYWJlbD0iU2F2ZSIgaWNvbj0icGkgcGktY2hlY2siIGNsYXNzPSJwLWJ1dHRvbi10ZXh0IiAoY2xpY2spPSJzYXZlKCkiPjwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgIDxidXR0b24gcEJ1dHRvbiBsYWJlbD0iUmVzZXQiIGljb249InBpIHBpLXJlZnJlc2giIGNsYXNzPSJwLWJ1dHRvbi10ZXh0IiAoY2xpY2spPSJyZXNldCgpIj48L2J1dHRvbj4KICAgICAgICAgICAgICAgIDwvbmctdGVtcGxhdGU-CiAgICAgICAgICAgIDwvcC1kaWFsb2c-CiAgICAgICAgPC9kaXY-CiAgICA8L2Rpdj4KPC9kaXY-Cg