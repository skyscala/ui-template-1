aW1wb3J0IHtDb21wb25lbnQsIE9uSW5pdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7CmltcG9ydCB7QnJlYWRjcnVtYlNlcnZpY2V9IGZyb20gJy4uL2FwcC5icmVhZGNydW1iLnNlcnZpY2UnOwppbXBvcnQge1ByaW1lSWNvbnN9IGZyb20gJ3ByaW1lbmcvYXBpJzsKCkBDb21wb25lbnQoewogICAgdGVtcGxhdGVVcmw6ICcuL2FwcC50aW1lbGluZWRlbW8uY29tcG9uZW50Lmh0bWwnLAogICAgc3R5bGVVcmxzOiBbJy4vYXBwLnRpbWVsaW5lZGVtby5zY3NzJ10KfSkKZXhwb3J0IGNsYXNzIEFwcFRpbWVsaW5lRGVtb0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdHsKCiAgICBjdXN0b21FdmVudHM6IGFueVtdOwoKICAgIGhvcml6b250YWxFdmVudHM6IGFueVtdOwoKICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgYnJlYWRjcnVtYlNlcnZpY2U6IEJyZWFkY3J1bWJTZXJ2aWNlKSB7CiAgICAgICAgdGhpcy5icmVhZGNydW1iU2VydmljZS5zZXRJdGVtcyhbCiAgICAgICAgICAgIHtsYWJlbDogJ1RpbWVsaW5lJ30KICAgICAgICBdKTsKICAgIH0KCiAgICBuZ09uSW5pdCgpIHsKICAgICAgICB0aGlzLmN1c3RvbUV2ZW50cyA9IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgc3RhdHVzOiAnT3JkZXJlZCcsCiAgICAgICAgICAgICAgICBkYXRlOiAnMTUvMTAvMjAyMCAxMDozMCcsCiAgICAgICAgICAgICAgICBpY29uOiBQcmltZUljb25zLlNIT1BQSU5HX0NBUlQsCiAgICAgICAgICAgICAgICBjb2xvcjogJyM5QzI3QjAnLAogICAgICAgICAgICAgICAgaW1hZ2U6ICdnYW1lLWNvbnRyb2xsZXIuanBnJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7c3RhdHVzOiAnUHJvY2Vzc2luZycsIGRhdGU6ICcxNS8xMC8yMDIwIDE0OjAwJywgaWNvbjogUHJpbWVJY29ucy5DT0csIGNvbG9yOiAnIzY3M0FCNyd9LAogICAgICAgICAgICB7c3RhdHVzOiAnU2hpcHBlZCcsIGRhdGU6ICcxNS8xMC8yMDIwIDE2OjE1JywgaWNvbjogUHJpbWVJY29ucy5FTlZFTE9QRSwgY29sb3I6ICcjRkY5ODAwJ30sCiAgICAgICAgICAgIHtzdGF0dXM6ICdEZWxpdmVyZWQnLCBkYXRlOiAnMTYvMTAvMjAyMCAxMDowMCcsIGljb246IFByaW1lSWNvbnMuQ0hFQ0ssIGNvbG9yOiAnIzYwN0Q4Qid9CiAgICAgICAgXTsKCiAgICAgICAgdGhpcy5ob3Jpem9udGFsRXZlbnRzID0gWwogICAgICAgICAgICAnMjAyMCcsICcyMDIxJywgJzIwMjInLCAnMjAyMycKICAgICAgICBdOwogICAgfQp9Cg