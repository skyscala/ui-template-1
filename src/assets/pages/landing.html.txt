<!DOCTYPE html>
<html>

    <head>
        <script>document.write('<base href="' + document.location + '" />');</script>
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"/>
        <meta name="apple-mobile-web-app-capable" content="yes" />
        <title>PrimeNG - California - Landing Page</title>

        <link id="theme-css" rel="stylesheet" type="text/css" href="../theme/theme-noir.css">
        <link id="layout-css" rel="stylesheet" type="text/css" href="../layout/css/layout-noir.css">
        <link rel="stylesheet" href="primeicons-static.css"/>
        <link rel="stylesheet" type="text/css" href="primeng.min.css">
        <link rel="stylesheet" type="text/css" href="primeflex.min.css">
    </head>

    <body class="landing-body">
        <div class="landing-wrapper">
            <div id="header">
                <div class="header-top clearfix">
                    <a href="#" class="logo">
                        <img src="../layout/images/logo-black.png" alt="california-layout"/>
                    </a>
                    <ul class="header-menu">
                        <li><a href="#"><span>Home</span></a></li>
                        <li><a href="#features"><span>Features</span></a></li>
                        <li><a href="#premium"><span>Demo</span></a></li>
                        <li><a href="#news"><span>News</span></a></li>
                        <li><a href="#pricing"><span>Pricing</span></a></li>
                        <li><a href="#media"><span>Media</span></a></li>
                    </ul>
                </div>

                <div class="header-content clearfix">
                    <div class="header-content-panel">
                        <h3>PrimeNG Presents California</h3>
                        <p>Modern and elegant responsive application template with a premium look for PrimeNG components.</p>
                        <button type="button" class="p-button landing-button" >
                            <span class="p-button-text">Learn More</span>
                        </button>
                    </div>
                </div>
            </div>
            <div id="features" class="features">
                <h2>Features</h2>
                <div class="p-grid">
                    <div class="p-col-12 p-md-6">
                        <div class="p-grid">
                            <div class="p-col-12 p-lg-3">
                                <img src="../layout/images/icon-responsive.png" alt="california-layout" />
                            </div>
                            <div class="p-col-12 p-lg-9">
                                <h6>Responsive Layout</h6>
                                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut in mauris ac purus ullamcorper pharetra quis non nulla. </p>
                                <span class="learn-more">Learn More</span>
                                <i class="pi pi-arrow-right"></i>
                            </div>
                        </div>
                    </div>
                    <div class="p-col-12 p-md-6">
                        <div class="p-grid">
                            <div class="p-col-12 p-lg-3">
                                <img src="../layout/images/icon-welldocumented.png" alt="california-layout" />
                            </div>
                            <div class="p-col-12 p-lg-9">
                                <h6>Well Documented</h6>
                                <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</p>
                                <span class="learn-more">Learn More</span>
                                <i class="pi pi-arrow-right"></i>
                            </div>
                        </div>
                    </div>

                    <div class="p-col-12 p-md-6">
                        <div class="p-grid">
                            <div class="p-col-12 p-lg-3">
                                <img src="../layout/images/icon-moderndesign.png" alt="california-layout" />
                            </div>
                            <div class="p-col-12 p-lg-9">
                                <h6>Modern Design</h6>
                                <p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
                                <span class="learn-more">Learn More</span>
                                <i class="pi pi-arrow-right"></i>
                            </div>
                        </div>
                    </div>
                    <div class="p-col-12 p-md-6">
                        <div class="p-grid">
                            <div class="p-col-12 p-lg-3">
                                <img src="../layout/images/icon-cleancode.png" alt="california-layout" />
                            </div>
                            <div class="p-col-12 p-lg-9">
                                <h6>Clean Code</h6>
                                <p>Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
                                <span class="learn-more">Learn More</span>
                                <i class="pi pi-arrow-right"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div id="premium" class="clearfix premium">
                <div class="premium-content">
                    <h3>PrimeNG California</h3>
                    <p>Take advantage of media's most prominent business trend, and empowers your internal advertising teams.</p>
                    <button type="button" class="p-button landing-button" >
                        <span class="p-button-text">Learn More</span>
                    </button>
                </div>
            </div>


            <div id="news" class="news">
                <h2>News</h2>
                <div class="p-grid">
                    <div class="p-col-12 p-md-6 p-lg-3">
                        <div class="p-col-12 news-icon">
                            <img src="../layout/images/news-rooms.png" alt="california-layout" />
                        </div>
                        <div class="p-col-12">
                            <h3>Dummy News Title</h3>
                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut in mauris ac purus ullamcorper pharetra quis non nulla. Interdum et malesuada fames ac ante ipsum primis in faucibus. </p>
                            <a href="#">
                                <span class="learn-more">Learn More</span>
                            </a>
                            <i class="pi pi-arrow-right"></i>
                        </div>
                    </div>
                    <div class="p-col-12 p-md-6 p-lg-3">
                        <div class="p-col-12 news-icon">
                            <img src="../layout/images/news-roof.png" alt="california-layout" />
                        </div>
                        <div class="p-col-12">
                            <h3>Dummy News Title</h3>
                            <p>Maecenas diam ante, vehicula nec interdum fermentum, fermentum eu ex. Donec scelerisque fermentum porttitor. Curabitur mollis dictum enim nec faucibus. Aliquam vel orci vel ante feugiat.</p>
                            <a href="#">
                                <span class="learn-more">Learn More</span>
                            </a>
                            <i class="pi pi-arrow-right"></i>
                        </div>
                    </div>
                    <div class="p-col-12 p-md-6 p-lg-3">
                        <div class="p-col-12 news-icon">
                            <img src="../layout/images/news-city.png" alt="california-layout" />
                        </div>
                        <div class="p-col-12">
                            <h3>Dummy News Title</h3>
                            <p>Donec magna nunc, pellentesque in tempus ut, tempor id metus. Nunc est lacus, hendrerit ornare porttitor at, bibendum eget dui. Vestibulum accumsan lorem sit amet massa auctor.</p>
                            <a href="#">
                                <span class="learn-more">Learn More</span>
                            </a>
                            <i class="pi pi-arrow-right"></i>
                        </div>
                    </div>
                    <div class="p-col-12 p-md-6 p-lg-3">
                        <div class="p-col-12 news-icon">
                            <img src="../layout/images/news-building.png" alt="california-layout" />
                        </div>
                        <div class="p-col-12">
                            <h3>Dummy News Title</h3>
                            <p>Duis nec lobortis massa, sed facilisis lorem. In hac habitasse platea dictumst. Etiam semper at neque ut viverra. In in placerat justo, ut tincidunt nibh. Mauris sit amet porttitor enim.</p>
                            <a href="#">
                                <span class="learn-more">Learn More</span>
                            </a>
                            <i class="pi pi-arrow-right"></i>
                        </div>
                    </div>
                </div>
            </div>

            <div id="pricing" class="pricing">
                <h2>Pricing</h2>
                <div class="p-grid">
                    <div class="p-col-12 p-md-6 p-lg-3 pricing-box pricing-basic">
                        <div class="p-col-12 pricing-header">BASIC</div>
                        <div class="p-col-12 pricing-subheader">
                            <span class="price">Free</span>
                            <span class="duration">LIFETIME</span>
                        </div>
                        <div class="p-col-12 pricing-content">
                            <span>All Basic Features</span>
                            <span>Responsive</span>
                        </div>
                        <div class="p-col-12">
                            <button type="button" class="p-button" >
                                <span class="p-button-text">Try Free</span>
                            </button>
                        </div>
                    </div>
                    <div class="p-col-12 p-md-6 p-lg-3 pricing-box pricing-beginner">
                        <div class="p-col-12 pricing-header">BEGINNER</div>
                        <div class="p-col-12 pricing-subheader">
                            <span class="price">$9</span>
                            <span class="duration">PER MONTH</span>
                        </div>
                        <div class="p-col-12 pricing-content">
                            <span>All Basic Features</span>
                            <span>Responsive</span>
                            <span>Push Messages</span>
                        </div>
                        <div class="p-col-12">
                            <button type="button" class="p-button" >
                                <span class="p-button-text">Buy Now</span>
                            </button>
                        </div>
                    </div>
                    <div class="p-col-12 p-md-6 p-lg-3 pricing-box pricing-professional">
                        <div class="p-col-12 pricing-header">PROFESSIONAL</div>
                        <div class="p-col-12 pricing-subheader">
                            <span class="price">$19</span>
                            <span class="duration">PER MONTH</span>
                        </div>
                        <div class="p-col-12 pricing-content">
                            <span>All Basic Features</span>
                            <span>Responsive</span>
                            <span>Push Messages</span>
                            <span>Free Shipping</span>
                            <span>Unlimited Bandwidth</span>
                        </div>
                        <div class="p-col-12">
                            <button type="button" class="p-button" >
                                <span class="p-button-text">Buy Now</span>
                            </button>
                        </div>
                    </div>
                    <div class="p-col-12 p-md-6 p-lg-3 pricing-box pricing-enterprise">
                        <div class="p-col-12 pricing-header">ENTERPRISE
                        </div>
                        <div class="p-col-12 pricing-subheader">
                            <span class="price">$29</span>
                            <span class="duration">CUSTOM</span>
                        </div>
                        <div class="p-col-12 pricing-content">
                            <span>All Basic Features</span>
                            <span>Responsive</span>
                            <span>Push Messages</span>
                            <span>Free Shipping</span>
                            <span>Unlimited Bandwidth</span>
                            <span>7/24 Support</span>
                        </div>
                        <div class="p-col-12">
                            <button type="button" class="p-button" >
                                <span class="p-button-text">Buy Now</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <div id="media" class="media">
                <h2>Multimedia</h2>
                <p>Take advantage of media's most prominent business trend, and empowers your internal advertising teams.</p>
                <div class="video-container">
                    <iframe width="560" height="315" src="https://www.youtube.com/embed/B_lYGUtCd0g" frameborder="0" ></iframe>
                </div>
            </div>

            <div id="footer" class="footer">
                <div class="p-grid">
                    <div class="p-col-12 p-lg-4">
                        <h3 class="appname">California</h3>
                        <p>PrimeNG California Premium Application Template</p>
                    </div>
                    <div class="p-col-12 p-lg-2">
                        <span class="header">OVERVIEW</span>
                        <a href="#">Why PrimeFaces</a>
                        <a href="#">Who Uses PrimeFaces</a>
                        <a href="#">Testimonials</a>
                        <a href="#">License</a>
                    </div>
                    <div class="p-col-12 p-lg-2">
                        <span class="header">DEMOS</span>
                        <a href="#">PrimeFaces</a>
                        <a href="#">PrimeNG</a>
                        <a href="#">PrimeReact</a>
                        <a href="#">PrimeUI</a>
                    </div>
                    <div class="p-col-12 p-lg-2">
                        <span class="header">SUPPORT</span>
                        <a href="#">Support Options</a>
                        <a href="#">PrimeFaces PRO</a>
                        <a href="#">PrimeFaces Elite</a>
                        <a href="#">Forum</a>
                    </div>
                    <div class="p-col-12 p-lg-2 footer-social">
                        <span class="header">SOCIAL</span>
                        <a href="#"><i class="pi pi-twitter"></i></a>
                        <a href="#"><i class="pi pi-facebook"></i></a>
                        <a href="#"><i class="pi pi-github"></i></a>
                    </div>
                </div>
            </div>
        </div>
    </body>

</html>
