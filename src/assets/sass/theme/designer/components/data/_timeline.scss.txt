LnAtdGltZWxpbmUgewogICAgLnAtdGltZWxpbmUtZXZlbnQtbWFya2VyIHsKICAgICAgICBib3JkZXI6ICR0aW1lbGluZUV2ZW50TWFya2VyQm9yZGVyOyAKICAgICAgICBib3JkZXItcmFkaXVzOiAkdGltZWxpbmVFdmVudE1hcmtlckJvcmRlclJhZGl1czsKICAgICAgICB3aWR0aDogJHRpbWVsaW5lRXZlbnRNYXJrZXJXaWR0aDsKICAgICAgICBoZWlnaHQ6ICR0aW1lbGluZUV2ZW50TWFya2VySGVpZ2h0OwogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR0aW1lbGluZUV2ZW50TWFya2VyQmFja2dyb3VuZDsKICAgIH0KCiAgICAucC10aW1lbGluZS1ldmVudC1jb25uZWN0b3IgewogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR0aW1lbGluZUV2ZW50Q29sb3I7CiAgICB9CgogICAgJi5wLXRpbWVsaW5lLXZlcnRpY2FsIHsKICAgICAgICAucC10aW1lbGluZS1ldmVudC1vcHBvc2l0ZSwKICAgICAgICAucC10aW1lbGluZS1ldmVudC1jb250ZW50ICB7CiAgICAgICAgICAgIHBhZGRpbmc6ICR0aW1lbGluZVZlcnRpY2FsRXZlbnRDb250ZW50UGFkZGluZzsKICAgICAgICB9CgogICAgICAgIC5wLXRpbWVsaW5lLWV2ZW50LWNvbm5lY3RvciB7CiAgICAgICAgICAgIHdpZHRoOiAkdGltZWxpbmVFdmVudENvbm5lY3RvclNpemU7CiAgICAgICAgfQogICAgfQoKICAgICYucC10aW1lbGluZS1ob3Jpem9udGFsIHsKICAgICAgICAucC10aW1lbGluZS1ldmVudC1vcHBvc2l0ZSwKICAgICAgICAucC10aW1lbGluZS1ldmVudC1jb250ZW50ICB7CiAgICAgICAgICAgIHBhZGRpbmc6ICR0aW1lbGluZUhvcml6b250YWxFdmVudENvbnRlbnRQYWRkaW5nOwogICAgICAgIH0KCiAgICAgICAgLnAtdGltZWxpbmUtZXZlbnQtY29ubmVjdG9yIHsKICAgICAgICAgICAgaGVpZ2h0OiAkdGltZWxpbmVFdmVudENvbm5lY3RvclNpemU7CiAgICAgICAgfQogICAgfQp9CgoKCg