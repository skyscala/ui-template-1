LnAtdHJlZSB7CiAgICBib3JkZXI6ICRwYW5lbENvbnRlbnRCb3JkZXI7CiAgICBiYWNrZ3JvdW5kOiAkcGFuZWxDb250ZW50Qmc7CiAgICBjb2xvcjogJHBhbmVsQ29udGVudFRleHRDb2xvcjsKICAgIHBhZGRpbmc6ICRwYW5lbENvbnRlbnRQYWRkaW5nOwogICAgYm9yZGVyLXJhZGl1czogJGJvcmRlclJhZGl1czsKCiAgICAucC10cmVlLWNvbnRhaW5lciB7CiAgICAgICAgLnAtdHJlZW5vZGUgewogICAgICAgICAgICBwYWRkaW5nOiAkdHJlZU5vZGVQYWRkaW5nOwoKICAgICAgICAgICAgLnAtdHJlZW5vZGUtY29udGVudCB7CiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAkYm9yZGVyUmFkaXVzOwogICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogJGxpc3RJdGVtVHJhbnNpdGlvbjsKICAgICAgICAgICAgICAgIHBhZGRpbmc6ICR0cmVlTm9kZUNvbnRlbnRQYWRkaW5nOwoKICAgICAgICAgICAgICAgIC5wLXRyZWUtdG9nZ2xlciB7CiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAkaW5saW5lU3BhY2luZzsKICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBhY3Rpb24taWNvbigpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIC5wLXRyZWVub2RlLWljb24gewogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogJGlubGluZVNwYWNpbmc7CiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICR0cmVlTm9kZUljb25Db2xvcjsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAucC1jaGVja2JveCB7CiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAkaW5saW5lU3BhY2luZzsKCiAgICAgICAgICAgICAgICAgICAgLnAtaW5kZXRlcm1pbmF0ZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIC5wLWNoZWNrYm94LWljb24gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICR0ZXh0Q29sb3I7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgJjpmb2N1cyB7CiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgZm9jdXNlZCgpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICYucC1oaWdobGlnaHQgewogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICRoaWdobGlnaHRCZzsKICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGhpZ2hsaWdodFRleHRDb2xvcjsKCiAgICAgICAgICAgICAgICAgICAgLnAtdHJlZS10b2dnbGVyLAogICAgICAgICAgICAgICAgICAgIC5wLXRyZWVub2RlLWljb24gewogICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGhpZ2hsaWdodFRleHRDb2xvcjsKCiAgICAgICAgICAgICAgICAgICAgICAgICY6aG92ZXIgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRoaWdobGlnaHRUZXh0Q29sb3I7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgJi5wLXRyZWVub2RlLXNlbGVjdGFibGU6bm90KC5wLWhpZ2hsaWdodCk6aG92ZXIgewogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICRpbnB1dExpc3RJdGVtSG92ZXJCZzsKICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGlucHV0TGlzdEl0ZW1UZXh0SG92ZXJDb2xvcjsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAmLnAtdHJlZW5vZGUtZHJhZ292ZXIgewogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICRpbnB1dExpc3RJdGVtSG92ZXJCZzsKICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGlucHV0TGlzdEl0ZW1UZXh0SG92ZXJDb2xvcjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICAucC10cmVlLWZpbHRlci1jb250YWluZXIgewogICAgICAgIG1hcmdpbi1ib3R0b206ICRpbmxpbmVTcGFjaW5nOwoKICAgICAgICAucC10cmVlLWZpbHRlciB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiBudGgoJGlucHV0UGFkZGluZywgMikgKyAkcHJpbWVJY29uRm9udFNpemU7CiAgICAgICAgfQoKICAgICAgICAucC10cmVlLWZpbHRlci1pY29uIHsKICAgICAgICAgICAgcmlnaHQ6IG50aCgkaW5wdXRQYWRkaW5nLCAyKTsKICAgICAgICAgICAgY29sb3I6ICRpbnB1dEljb25Db2xvcjsKICAgICAgICB9CiAgICB9CgogICAgLnAtdHJlZW5vZGUtY2hpbGRyZW4gewogICAgICAgIHBhZGRpbmc6ICR0cmVlTm9kZUNoaWxkcmVuUGFkZGluZzsKICAgIH0KCiAgICAucC10cmVlLWxvYWRpbmctaWNvbiB7CiAgICAgICAgZm9udC1zaXplOiAkbG9hZGluZ0ljb25Gb250U2l6ZTsKICAgIH0KCiAgICAucC10cmVlbm9kZS1kcm9wcG9pbnQgewogICAgICAgICYucC10cmVlbm9kZS1kcm9wcG9pbnQtYWN0aXZlIHsKICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogc2NhbGUtY29sb3IoJGhpZ2hsaWdodEJnLCAkbGlnaHRuZXNzOiAtMjAlKTsKICAgICAgICB9CiAgICB9IAoKICAgICYucC10cmVlLWhvcml6b250YWwgewogICAgICAgIC5wLXRyZWVub2RlIHsKICAgICAgICAgICAgLnAtdHJlZW5vZGUtY29udGVudCB7CiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAkYm9yZGVyUmFkaXVzOwogICAgICAgICAgICAgICAgYm9yZGVyOiAkcGFuZWxDb250ZW50Qm9yZGVyOwogICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHBhbmVsQ29udGVudEJnOwogICAgICAgICAgICAgICAgY29sb3I6ICRwYW5lbENvbnRlbnRUZXh0Q29sb3I7CiAgICAgICAgICAgICAgICBwYWRkaW5nOiAkdHJlZU5vZGVDb250ZW50UGFkZGluZzsKICAgICAgICAgICAgICAgIHRyYW5zaXRpb246ICRsaXN0SXRlbVRyYW5zaXRpb247CgogICAgICAgICAgICAgICAgJi5wLWhpZ2hsaWdodCB7CiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGhpZ2hsaWdodEJnOwogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkaGlnaGxpZ2h0VGV4dENvbG9yOwoKICAgICAgICAgICAgICAgICAgICAucC10cmVlbm9kZS1pY29uIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRoaWdobGlnaHRUZXh0Q29sb3I7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIC5wLXRyZWUtdG9nZ2xlciB7CiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAkaW5saW5lU3BhY2luZzsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAucC10cmVlbm9kZS1pY29uIHsKICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHRyZWVOb2RlSWNvbkNvbG9yOwogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogJGlubGluZVNwYWNpbmc7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLnAtY2hlY2tib3ggewogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogJGlubGluZVNwYWNpbmc7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLnAtdHJlZW5vZGUtbGFiZWw6bm90KC5wLWhpZ2hsaWdodCk6aG92ZXIgewogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQ7CiAgICAgICAgICAgICAgICAgICAgY29sb3I6IGluaGVyaXQ7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgJi5wLXRyZWVub2RlLXNlbGVjdGFibGU6bm90KC5wLWhpZ2hsaWdodCk6aG92ZXIgewogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICRpbnB1dExpc3RJdGVtSG92ZXJCZzsKICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGlucHV0TGlzdEl0ZW1UZXh0SG92ZXJDb2xvcjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgJjpmb2N1cyB7CiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgZm9jdXNlZCgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9Cg