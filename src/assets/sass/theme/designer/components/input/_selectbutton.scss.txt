LnAtc2VsZWN0YnV0dG9uIHsKICAgIC5wLWJ1dHRvbiB7CiAgICAgICAgYmFja2dyb3VuZDogJHRvZ2dsZUJ1dHRvbkJnOwogICAgICAgIGJvcmRlcjogJHRvZ2dsZUJ1dHRvbkJvcmRlcjsKICAgICAgICBjb2xvcjogJHRvZ2dsZUJ1dHRvblRleHRDb2xvcjsKICAgICAgICB0cmFuc2l0aW9uOiAkZm9ybUVsZW1lbnRUcmFuc2l0aW9uOwoKICAgICAgICAucC1idXR0b24taWNvbi1sZWZ0LAogICAgICAgIC5wLWJ1dHRvbi1pY29uLXJpZ2h0IHsKICAgICAgICAgICAgY29sb3I6ICR0b2dnbGVCdXR0b25JY29uQ29sb3I7CiAgICAgICAgfQoKICAgICAgICAmOm5vdCgucC1kaXNhYmxlZCk6bm90KC5wLWhpZ2hsaWdodCk6aG92ZXIgewogICAgICAgICAgICBiYWNrZ3JvdW5kOiAkdG9nZ2xlQnV0dG9uSG92ZXJCZzsKICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAkdG9nZ2xlQnV0dG9uSG92ZXJCb3JkZXJDb2xvcjsKICAgICAgICAgICAgY29sb3I6ICR0b2dnbGVCdXR0b25UZXh0SG92ZXJDb2xvcjsKCiAgICAgICAgICAgIC5wLWJ1dHRvbi1pY29uLWxlZnQsCiAgICAgICAgICAgIC5wLWJ1dHRvbi1pY29uLXJpZ2h0IHsKICAgICAgICAgICAgICAgIGNvbG9yOiAkdG9nZ2xlQnV0dG9uSWNvbkhvdmVyQ29sb3I7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgICYucC1oaWdobGlnaHQgewogICAgICAgICAgICBiYWNrZ3JvdW5kOiAkdG9nZ2xlQnV0dG9uQWN0aXZlQmc7CiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJHRvZ2dsZUJ1dHRvbkFjdGl2ZUJvcmRlckNvbG9yOwogICAgICAgICAgICBjb2xvcjogJHRvZ2dsZUJ1dHRvblRleHRBY3RpdmVDb2xvcjsKCiAgICAgICAgICAgIC5wLWJ1dHRvbi1pY29uLWxlZnQsCiAgICAgICAgICAgIC5wLWJ1dHRvbi1pY29uLXJpZ2h0IHsKICAgICAgICAgICAgICAgIGNvbG9yOiAkdG9nZ2xlQnV0dG9uSWNvbkFjdGl2ZUNvbG9yOwogICAgICAgICAgICB9CgogICAgICAgICAgICAmOmhvdmVyIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICR0b2dnbGVCdXR0b25BY3RpdmVIb3ZlckJnOwogICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAkdG9nZ2xlQnV0dG9uQWN0aXZlSG92ZXJCb3JkZXJDb2xvcjsKICAgICAgICAgICAgICAgIGNvbG9yOiAkdG9nZ2xlQnV0dG9uVGV4dEFjdGl2ZUhvdmVyQ29sb3I7CgogICAgICAgICAgICAgICAgLnAtYnV0dG9uLWljb24tbGVmdCwKICAgICAgICAgICAgICAgIC5wLWJ1dHRvbi1pY29uLXJpZ2h0IHsKICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHRvZ2dsZUJ1dHRvbkljb25BY3RpdmVIb3ZlckNvbG9yOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9CgpwLXNlbGVjdGJ1dHRvbi5uZy1kaXJ0eS5uZy1pbnZhbGlkID4gLnAtc2VsZWN0YnV0dG9uID4gLnAtYnV0dG9uIHsKICAgIEBpbmNsdWRlIGludmFsaWQtaW5wdXQoKTsKfQ