LnAtcGFuZWxtZW51IHsKICAgIC5wLXBhbmVsbWVudS1oZWFkZXIgewogICAgICAgID4gYSB7CiAgICAgICAgICAgIHBhZGRpbmc6ICRhY2NvcmRpb25IZWFkZXJQYWRkaW5nOwogICAgICAgICAgICBib3JkZXI6ICRhY2NvcmRpb25IZWFkZXJCb3JkZXI7CiAgICAgICAgICAgIGNvbG9yOiAkYWNjb3JkaW9uSGVhZGVyVGV4dENvbG9yOwogICAgICAgICAgICBiYWNrZ3JvdW5kOiAkYWNjb3JkaW9uSGVhZGVyQmc7CiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiAkYWNjb3JkaW9uSGVhZGVyRm9udFdlaWdodDsKICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogJGJvcmRlclJhZGl1czsKICAgICAgICAgICAgdHJhbnNpdGlvbjogJGxpc3RJdGVtVHJhbnNpdGlvbjsKCiAgICAgICAgICAgIC5wLXBhbmVsbWVudS1pY29uIHsKICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogJGlubGluZVNwYWNpbmc7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC5wLW1lbnVpdGVtLWljb24gewogICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAkaW5saW5lU3BhY2luZzsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgJjpmb2N1cyB7CiAgICAgICAgICAgICAgICBAaW5jbHVkZSBmb2N1c2VkKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgICY6bm90KC5wLWhpZ2hsaWdodCk6bm90KC5wLWRpc2FibGVkKSB7CiAgICAgICAgICAgID4gYTpob3ZlciB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAkYWNjb3JkaW9uSGVhZGVySG92ZXJCZzsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJGFjY29yZGlvbkhlYWRlckhvdmVyQm9yZGVyQ29sb3I7CiAgICAgICAgICAgICAgICBjb2xvcjogJGFjY29yZGlvbkhlYWRlclRleHRIb3ZlckNvbG9yOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAmLnAtaGlnaGxpZ2h0IHsKICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDsKCiAgICAgICAgICAgID4gYSB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAkYWNjb3JkaW9uSGVhZGVyQWN0aXZlQmc7CiAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6ICRhY2NvcmRpb25IZWFkZXJBY3RpdmVCb3JkZXJDb2xvcjsKICAgICAgICAgICAgICAgIGNvbG9yOiAkYWNjb3JkaW9uSGVhZGVyVGV4dEFjdGl2ZUNvbG9yOwogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwOwogICAgICAgICAgICB9CgogICAgICAgICAgICAmOm5vdCgucC1kaXNhYmxlZCkgewogICAgICAgICAgICAgICAgPiBhIHsKICAgICAgICAgICAgICAgICAgICAmOmhvdmVyIHsKICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAkYWNjb3JkaW9uSGVhZGVyQWN0aXZlSG92ZXJCb3JkZXJDb2xvcjsKICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJGFjY29yZGlvbkhlYWRlckFjdGl2ZUhvdmVyQmc7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkYWNjb3JkaW9uSGVhZGVyVGV4dEFjdGl2ZUhvdmVyQ29sb3I7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIC5wLXBhbmVsbWVudS1jb250ZW50IHsKICAgICAgICBwYWRkaW5nOiAkdmVydGljYWxNZW51UGFkZGluZzsKICAgICAgICBib3JkZXI6ICRhY2NvcmRpb25Db250ZW50Qm9yZGVyOwogICAgICAgIGJhY2tncm91bmQ6ICRhY2NvcmRpb25Db250ZW50Qmc7CiAgICAgICAgY29sb3I6ICRhY2NvcmRpb25Db250ZW50VGV4dENvbG9yOwogICAgICAgIG1hcmdpbi1ib3R0b206ICRhY2NvcmRpb25TcGFjaW5nOwogICAgICAgIGJvcmRlci10b3A6IDA7CiAgICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7CiAgICAgICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDsKICAgICAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogJGJvcmRlclJhZGl1czsKICAgICAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAkYm9yZGVyUmFkaXVzOwoKICAgICAgICAucC1tZW51aXRlbSB7CiAgICAgICAgICAgIC5wLW1lbnVpdGVtLWxpbmsgewogICAgICAgICAgICAgICAgQGluY2x1ZGUgbWVudWl0ZW0tbGluaygpOwoKICAgICAgICAgICAgICAgIC5wLXBhbmVsbWVudS1pY29uIHsKICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6ICRpbmxpbmVTcGFjaW5nOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAucC1zdWJtZW51LWxpc3Q6bm90KC5wLXBhbmVsbWVudS1yb290LXN1Ym1lbnUpIHsKICAgICAgICAgICAgcGFkZGluZzogJHRyZWVOb2RlQ2hpbGRyZW5QYWRkaW5nOwogICAgICAgIH0KICAgIH0KCiAgICAucC1wYW5lbG1lbnUtcGFuZWwgewogICAgICAgIG1hcmdpbi1ib3R0b206ICRhY2NvcmRpb25TcGFjaW5nOwoKICAgICAgICBAaWYgJGFjY29yZGlvblNwYWNpbmcgPT0gMCB7CiAgICAgICAgICAgIC5wLXBhbmVsbWVudS1oZWFkZXIgewogICAgICAgICAgICAgICAgPiBhIHsKICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICAucC1wYW5lbG1lbnUtY29udGVudCB7CiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwOwogICAgICAgICAgICB9CgogICAgICAgICAgICAmOm5vdCg6Zmlyc3QtY2hpbGQpIHsKICAgICAgICAgICAgICAgIC5wLXBhbmVsbWVudS1oZWFkZXIgewogICAgICAgICAgICAgICAgICAgID4gYSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci10b3A6IDAgbm9uZTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICY6bm90KC5wLWhpZ2hsaWdodCk6bm90KC5wLWRpc2FibGVkKTpob3ZlciwKICAgICAgICAgICAgICAgICAgICAmOm5vdCgucC1kaXNhYmxlZCkucC1oaWdobGlnaHQ6aG92ZXIgewogICAgICAgICAgICAgICAgICAgICAgICA-IGEgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXRvcDogMCBub25lOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICAmOmZpcnN0LWNoaWxkIHsKICAgICAgICAgICAgICAgIC5wLXBhbmVsbWVudS1oZWFkZXIgewogICAgICAgICAgICAgICAgICAgID4gYSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAkYm9yZGVyUmFkaXVzOwogICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAkYm9yZGVyUmFkaXVzOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgJjpsYXN0LWNoaWxkIHsKICAgICAgICAgICAgICAgIC5wLXBhbmVsbWVudS1oZWFkZXI6bm90KC5wLWhpZ2hsaWdodCkgewogICAgICAgICAgICAgICAgICAgID4gYSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAkYm9yZGVyUmFkaXVzOwogICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAkYm9yZGVyUmFkaXVzOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAucC1wYW5lbG1lbnUtY29udGVudCB7CiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6ICRib3JkZXJSYWRpdXM7CiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogJGJvcmRlclJhZGl1czsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0gCiAgICB9Cgp9Cg