LnAtdGllcmVkbWVudSB7CiAgICBwYWRkaW5nOiAkdmVydGljYWxNZW51UGFkZGluZzsKICAgIGJhY2tncm91bmQ6ICRtZW51Qmc7CiAgICBjb2xvcjogJG1lbnVUZXh0Q29sb3I7CiAgICBib3JkZXI6ICRtZW51Qm9yZGVyOwogICAgYm9yZGVyLXJhZGl1czogJGJvcmRlclJhZGl1czsKICAgIHdpZHRoOiAkbWVudVdpZHRoOwoKICAgIC5wLW1lbnVpdGVtLWxpbmsgewogICAgICAgIEBpbmNsdWRlIG1lbnVpdGVtLWxpbmsoKTsKICAgIH0KCiAgICAmLnAtdGllcmVkbWVudS1vdmVybGF5IHsKICAgICAgICBiYWNrZ3JvdW5kOiAkb3ZlcmxheU1lbnVCZzsKICAgICAgICBib3JkZXI6ICRvdmVybGF5TWVudUJvcmRlcjsKICAgICAgICBib3gtc2hhZG93OiAkb3ZlcmxheU1lbnVTaGFkb3c7CiAgICB9CgogICAgLnAtc3VibWVudS1saXN0IHsKICAgICAgICBwYWRkaW5nOiAkdmVydGljYWxNZW51UGFkZGluZzsKICAgICAgICBiYWNrZ3JvdW5kOiAkb3ZlcmxheU1lbnVCZzsKICAgICAgICBib3JkZXI6ICRvdmVybGF5TWVudUJvcmRlcjsKICAgICAgICBib3gtc2hhZG93OiAkb3ZlcmxheU1lbnVTaGFkb3c7CiAgICB9CgogICAgLnAtbWVudWl0ZW0gewogICAgICAgIG1hcmdpbjogJHZlcnRpY2FsTWVudWl0ZW1NYXJnaW47CiAgICAKICAgICAgICAmOmxhc3QtY2hpbGQgewogICAgICAgICAgICBtYXJnaW46IDA7CiAgICAgICAgfQoKICAgICAgICAmLnAtbWVudWl0ZW0tYWN0aXZlIHsKICAgICAgICAgICAgPiAucC1tZW51aXRlbS1saW5rIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICRtZW51aXRlbUFjdGl2ZUJnOwoKICAgICAgICAgICAgICAgIC5wLW1lbnVpdGVtLXRleHQgewogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkbWVudWl0ZW1UZXh0QWN0aXZlQ29sb3I7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLnAtbWVudWl0ZW0taWNvbiwgLnAtc3VibWVudS1pY29uIHsKICAgICAgICAgICAgICAgICAgICBjb2xvcjogJG1lbnVpdGVtSWNvbkFjdGl2ZUNvbG9yOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIC5wLW1lbnUtc2VwYXJhdG9yIHsKICAgICAgICBib3JkZXItdG9wOiAkZGl2aWRlcjsKICAgICAgICBtYXJnaW46ICRtZW51U2VwYXJhdG9yTWFyZ2luOwogICAgfQoKICAgIC5wLXN1Ym1lbnUtaWNvbiB7CiAgICAgICAgZm9udC1zaXplOiAkbWVudWl0ZW1TdWJtZW51SWNvbkZvbnRTaXplOwogICAgfQp9Cg